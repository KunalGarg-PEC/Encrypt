{
  "version": 3,
  "sources": ["../../react-json-editor-ajrm/es/mitsuketa/index.js", "../../@babel/runtime/helpers/esm/typeof.js", "../../@babel/runtime/helpers/esm/toPrimitive.js", "../../@babel/runtime/helpers/esm/toPropertyKey.js", "../../@babel/runtime/helpers/esm/defineProperty.js", "../../@babel/runtime/helpers/esm/objectSpread.js", "../../react-json-editor-ajrm/es/index.js", "../../react-json-editor-ajrm/es/themes.js", "../../react-json-editor-ajrm/es/err.js", "../../react-json-editor-ajrm/es/locale/index.js", "../../react-json-editor-ajrm/es/locale/en.js"],
  "sourcesContent": ["/**\r\n * @author Andrew Redican <andrew.redican.mejia@gmail.com>\r\n */\n\n/**\r\n * Performs deep search on object tree, removes all properties with matching key, returns a new identity without the specified property\r\n * @param {Any} identity\r\n * @param {string} keyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} identity\r\n */\nfunction deepRemoveAll_Key(identity, keyName, maxDepth) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  let clonedIdentity = deepClone(identity);\n  var paths = locateAll_Key(clonedIdentity, keyName, maxDepth);\n  if (paths === [] || paths === false) return clonedIdentity;\n  paths.forEach(path => {\n    if (path === '') path = keyName;else path += '.' + keyName;\n    path = path.split('.');\n    var ref = clonedIdentity;\n    if (!Array.isArray(path)) delete ref[path];\n\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n\n      if (key in ref) {\n        if (i < path.length - 1) ref = ref[key];else delete ref[key];\n      } else break;\n    }\n  });\n  return clonedIdentity;\n}\n/**\r\n * Performs deep search on object tree, removes the first property with matching key, returns a new identity without the specified property\r\n * @param {Any} identity\r\n * @param {string} keyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} identity\r\n */\n\n\nfunction deepRemove_Key(identity, keyName, maxDepth) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  let clonedIdentity = deepClone(identity);\n  var path = locate_Key(clonedIdentity, keyName, maxDepth);\n  if (path === false) return clonedIdentity;\n  if (path === '') path = keyName;else path += '.' + keyName;\n  path = path.split('.');\n  var ref = clonedIdentity;\n  if (!Array.isArray(path)) delete ref[path];\n  path.forEach((key, i) => {\n    if (i < path.length - 1) ref = ref[key];else delete ref[key];\n  });\n  return clonedIdentity;\n}\n/**\r\n * Performs deep search on object tree, and renames the all matching keys\r\n * @param {Any} identity\r\n * @param {string} keyName\r\n * @param {string} newKeyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} identity\r\n */\n\n\nfunction renameKeys(identity, keyName, newKeyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (getType(newKeyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  if (newKeyName === '') return undefined;\n\n  function _renameKeys(identity, keyName, newKeyName, maxDepth, currentDepth = 0) {\n    let keys;\n\n    switch (getType(identity)) {\n      case 'array':\n        var Arr = [];\n        keys = Object.keys(identity);\n\n        for (var i = 0, l = keys.length; i < l; i++) {\n          let key = keys[i],\n              subIdentity = identity[key];\n          Arr[key] = _renameKeys(subIdentity, keyName, newKeyName, maxDepth, currentDepth + 1);\n        }\n\n        return Arr;\n\n      case 'object':\n        var Obj = {};\n        keys = Object.keys(identity);\n\n        for (var i = 0, l = keys.length; i < l; i++) {\n          let key = keys[i],\n              subIdentity = identity[key];\n          if (maxDepth !== null ? currentDepth < maxDepth : true) if (key === keyName) key = newKeyName;\n          Obj[key] = _renameKeys(subIdentity, keyName, newKeyName, maxDepth, currentDepth + 1);\n        }\n\n        return Obj;\n\n      case 'string':\n        return '' + identity;\n\n      case 'number':\n        return 0 + identity;\n\n      case 'boolean':\n        if (identity) return true;\n        return false;\n\n      case 'null':\n        return null;\n\n      case 'undefined':\n        return undefined;\n    }\n  }\n\n  return _renameKeys(identity, keyName, newKeyName, maxDepth, 0);\n}\n/**\r\n * Performs deep search on object tree, then renames the first matching key\r\n * @param {Any} identity\r\n * @param {string} keyName\r\n * @param {string} newKeyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} identity\r\n */\n\n\nfunction renameKey(identity, keyName, newKeyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (getType(newKeyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  if (newKeyName === '') return undefined;\n  var applied = false;\n\n  function _renameKey(identity, keyName, newKeyName, maxDepth, currentDepth = 0) {\n    let keys;\n\n    switch (getType(identity)) {\n      case 'array':\n        var Arr = [];\n        keys = Object.keys(identity);\n\n        for (var i = 0, l = keys.length; i < l; i++) {\n          let key = keys[i],\n              subIdentity = identity[key];\n          Arr[key] = _renameKey(subIdentity, keyName, newKeyName, maxDepth, currentDepth + 1);\n        }\n\n        return Arr;\n\n      case 'object':\n        var Obj = {};\n        keys = Object.keys(identity);\n\n        for (var i = 0, l = keys.length; i < l; i++) {\n          let key = keys[i],\n              subIdentity = identity[key];\n          if (maxDepth !== null ? currentDepth < maxDepth : true) if (!applied) if (key === keyName) {\n            key = newKeyName;\n            applied = true;\n          }\n          Obj[key] = _renameKey(subIdentity, keyName, newKeyName, maxDepth, currentDepth + 1);\n        }\n\n        return Obj;\n\n      case 'string':\n        return '' + identity;\n\n      case 'number':\n        return 0 + identity;\n\n      case 'boolean':\n        if (identity) return true;\n        return false;\n\n      case 'null':\n        return null;\n\n      case 'undefined':\n        return undefined;\n    }\n  }\n\n  return _renameKey(identity, keyName, newKeyName, maxDepth, 0);\n}\n/**\r\n * Creates a non-reference clone that is an exact copy to the identity provided.\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @param {Optional Number} startDepth\r\n * @return {Any} identity\r\n */\n\n\nfunction deepClone(identity, maxDepth = null, startDepth = null) {\n  var R = [];\n\n  function _deepClone(identity, maxDepth, startDepth, currentDepth = 0) {\n    let keys;\n\n    if (startDepth !== null ? currentDepth < startDepth : false) {\n      if (isIterable(identity)) {\n        keys = Object.keys(identity);\n        keys.forEach(key => {\n          _deepClone(identity[key], maxDepth, startDepth, currentDepth + 1);\n        });\n      }\n\n      return;\n    }\n\n    if (startDepth !== null ? currentDepth == startDepth : false) {\n      if (startDepth == 0) {\n        R = _deepClone(identity, maxDepth, null, currentDepth);\n        return;\n      }\n\n      if (isIterable(identity)) R.push(_deepClone(identity, maxDepth, startDepth, currentDepth + 1));\n      return;\n    }\n\n    switch (getType(identity)) {\n      case 'array':\n        var Arr = [];\n        keys = Object.keys(identity);\n        if (maxDepth !== null ? currentDepth < maxDepth : true) for (var i = 0, l = keys.length; i < l; i++) {\n          const key = keys[i],\n                subIdentity = identity[key];\n          Arr[key] = _deepClone(subIdentity, maxDepth, startDepth, currentDepth + 1);\n        }\n        return Arr;\n\n      case 'object':\n        var Obj = {};\n        keys = Object.keys(identity);\n        if (maxDepth !== null ? currentDepth < maxDepth : true) for (var i = 0, l = keys.length; i < l; i++) {\n          const key = keys[i],\n                subIdentity = identity[key];\n          Obj[key] = _deepClone(subIdentity, maxDepth, startDepth, currentDepth + 1);\n        }\n        return Obj;\n\n      case 'string':\n        return '' + identity;\n\n      case 'number':\n        return 0 + identity;\n\n      case 'boolean':\n        if (identity) return true;\n        return false;\n\n      case 'null':\n        return null;\n\n      case 'undefined':\n        return undefined;\n    }\n  }\n\n  if (startDepth === null) return _deepClone(identity, maxDepth, startDepth, 0);\n\n  _deepClone(identity, maxDepth, startDepth, 0);\n\n  return R;\n}\n/**\r\n * Performs deep search on collection to find all matches to the key name, and returns a list of identities containing the matched instances. If no matches found, it returns `undefined`.\r\n * @param {Any} collection\r\n * @param {Any} keyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Array || undefined} Identities\r\n */\n\n\nfunction deepFilter_Key(collection, keyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  var paths = locateAll_Key(collection, keyName, maxDepth);\n  if (paths === false) return undefined;\n  const results = paths.map(path => {\n    if (path === false) return undefined;\n    if (path === '') path = keyName;else path += '.' + keyName;\n    path = path.split('.');\n    var result = collection;\n    if (!Array.isArray(path)) return result[path];\n    path.forEach(key => {\n      result = result[key];\n    });\n    return result;\n  });\n  return results;\n}\n/**\r\n * Performs deep search on collection to find all matches to the key name, returns the location of each match in a string array. If no matches found, it returns `false`.\r\n * @param {Any} collection\r\n * @param {Any} keyName\r\n * @param {Optional Number} maxDepth\r\n * @return {Array || false} Paths\r\n */\n\n\nfunction locateAll_Key(collection, keyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  var R = [];\n\n  function _locateAll_Key(collection, keyName, xKey = '', path = '', maxDepth = null, currentDepth = 0) {\n    if (xKey === keyName) R[R.length] = path;\n    var result = false;\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return result;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key];\n\n      _locateAll_Key(subcollection, keyName, key, (path === '' ? path : path + '.') + key, maxDepth, currentDepth + 1);\n    }\n  }\n\n  _locateAll_Key(collection, keyName, '', '', maxDepth);\n\n  R = R.map(path => {\n    if (getType(path) === 'boolean') return path;\n    if (path === '') return path;\n    path = path.split('.');\n    path.pop();\n    path = path.join('.');\n    return path;\n  });\n  return R.length === 0 ? false : R;\n}\n/**\r\n * Performs deep search on collection to find a match to the key name, and returns the first identity containing the match. If no match found, it returns `undefined`.\r\n * @param {Any} collection\r\n * @param {Any} keyName\r\n * @param {Optional number} maxDepth\r\n * @return {Identity || undefined} identity\r\n */\n\n\nfunction deepGet_Key(collection, keyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n  var path = locate_Key(collection, keyName, maxDepth);\n  if (path === false) return undefined;\n  if (path === '') path = keyName;else path += '.' + keyName;\n  path = path.split('.');\n  var result = collection;\n  if (!Array.isArray(path)) return result[path];\n  path.forEach(key => {\n    result = result[key];\n  });\n  return result;\n}\n/**\r\n * Performs deep search on collection to find a match to the key name, will return the path of the first instance matched. If no match found, it returns `false`.\r\n * @param {Any} collection\r\n * @param {Any} keyName\r\n * @param {Optional number} maxDepth\r\n * @return {String || false} Path\r\n */\n\n\nfunction locate_Key(collection, keyName, maxDepth = null) {\n  if (getType(keyName) !== 'string') return undefined;\n  if (keyName === '') return undefined;\n\n  function _locate_Key(collection, keyName, path = '', maxDepth, currentDepth = 0) {\n    if (path === keyName) return path;\n    var result = false;\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return result;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key],\n            res = _locate_Key(subcollection, keyName, key, maxDepth, currentDepth + 1);\n\n      if (res) {\n        path = path === '' ? path : path + '.';\n        result = path + res;\n        break;\n      }\n    }\n    return result;\n  }\n\n  var path = _locate_Key(collection, keyName, '', maxDepth, 0);\n\n  if (getType(path) === 'boolean') return path;\n  if (path === '') return path;\n  path = path.split('.');\n  path.pop();\n  path = path.join('.');\n  return path;\n}\n/**\r\n * Performs deep search for identity on collection to return the location's depth of the first match. If no match found, it returns `false`.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {boolean}\r\n */\n\n\nfunction matchDepth(collection, identity, maxDepth = null) {\n  var path = locate(collection, identity, maxDepth);\n  if (path === false) return false;\n  if (path === '') return 0;\n  path = path.split('.');\n  return path.length;\n}\n/**\r\n * Walks through the entire object tree to return the maximum number of layers it contains.\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n */\n\n\nfunction maxDepth(identity, maxLayer = null) {\n  let R = 0;\n\n  function _maxDepth(identity, maxLayer, currentDepth = 0) {\n    if (R < currentDepth) R = currentDepth;\n    if (maxLayer !== null) if (currentDepth >= maxLayer) return;\n\n    if (isIterable(identity)) {\n      var keys = Object.keys(identity);\n      keys.forEach(key => {\n        var subIdentity = identity[key];\n\n        _maxDepth(subIdentity, maxLayer, currentDepth + 1);\n      });\n    }\n  }\n\n  _maxDepth(identity, maxLayer);\n\n  return R;\n}\n/**\r\n * Performs deep search for identity on collection, returns the number of matches found.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Number} nthDepth\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} Returns number of matches found.\r\n */\n\n\nfunction countMatches(collection, identity, nthDepth = null, maxDepth = null) {\n  var depth,\n      nthDepth_isNull = nthDepth === null,\n      maxDepth_isNull = maxDepth === null;\n  if (nthDepth_isNull && maxDepth_isNull) depth = null;else if (!nthDepth_isNull && !maxDepth_isNull) {\n    if (nthDepth < maxDepth) depth = nthDepth;else depth = maxDepth;\n  } else if (nthDepth) depth = nthDepth;else depth = maxDepth;\n  var paths = locateAll(collection, identity, depth);\n  if (paths === false) return 0;\n  if (nthDepth === null) return paths.length;\n\n  if (getType(nthDepth) === 'number') {\n    let count = 0;\n    paths.forEach(path => {\n      path = path.split('.');\n      if (path.length === nthDepth) count++;\n    });\n    return count;\n  }\n\n  return undefined;\n}\n/**\r\n* Performs deep search for each identity on collection, to shorten the identities to those that meets the match criteria\r\n* @param {Any} collection\r\n* @param {Any} identities\r\n* @param {Any} property\r\n* @param {Optional Number} maxDepth\r\n* @return {Any} Returns a collection of the same type as the 'identities' parameter provided with only the identities that matched.\r\n*/\n\n\nfunction onlyFalsy(collection, identities, property, maxDepth = null) {\n  if (getType(identities) === 'array') {\n    let result = [];\n    identities.forEach(identity => {\n      const subCollection = deepFilter(collection, identity);\n      if (isTruthy(subCollection)) if (foundFalsy(subCollection, property, maxDepth)) result.push(identity);\n    });\n    return result;\n  }\n\n  if (getType(identities) === 'object') {\n    let result = {};\n    Object.keys(identities).forEach(key => {\n      const identity = identities[key],\n            subCollection = deepFilter(collection, identity);\n      if (isTruthy(subCollection)) if (foundFalsy(subCollection, property, maxDepth)) result[key] = identity;\n    });\n    return result;\n  }\n\n  if (foundFalsy(collection, property, maxDepth)) return identities;\n}\n/**\r\n * Performs deep search on collection to find any match to the property and evalutates if truthy\r\n * @param {Any} collection\r\n * @param {Property} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {boolean} If match confirmed and truthy will return true, otherwise false\r\n */\n\n\nfunction foundFalsy(collection, identity, maxDepth = null) {\n  identity = singleProperty(identity);\n  if (isFalsy(identity)) return undefined;\n\n  function _foundFalsy(collection, identity, maxDepth, currentDepth = 0) {\n    if (containsKeys(collection, [identity])) return isFalsy(collection[identity]);\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return false;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key],\n            res = _foundFalsy(subcollection, identity, maxDepth, currentDepth + 1);\n\n      if (res) return true;\n    }\n    return false;\n  }\n\n  return _foundFalsy(collection, identity, maxDepth);\n}\n/**\r\n * Performs deep search for each identity on collection, to shorten the identities to those that meets the match criteria\r\n * @param {Any} collection\r\n * @param {Any} identities\r\n * @param {Any} property\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} Returns a collection of the same type as the 'identities' parameter provided with only the identities that matched.\r\n */\n\n\nfunction onlyTruthy(collection, identities, property, maxDepth = null) {\n  if (getType(identities) === 'array') {\n    let result = [];\n    identities.forEach(identity => {\n      const subCollection = deepFilter(collection, identity);\n      if (isTruthy(subCollection)) if (foundTruthy(subCollection, property, maxDepth)) result.push(identity);\n    });\n    return result;\n  }\n\n  if (getType(identities) === 'object') {\n    let result = {};\n    Object.keys(identities).forEach(key => {\n      const identity = identities[key],\n            subCollection = deepFilter(collection, identity);\n      if (isTruthy(subCollection)) if (foundTruthy(subCollection, property, maxDepth)) result[key] = identity;\n    });\n    return result;\n  }\n\n  if (foundTruthy(collection, property, maxDepth)) return identities;\n}\n/**\r\n * Performs deep search on collection to find any match to the property and evalutates if truthy\r\n * @param {Any} collection\r\n * @param {Property} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {boolean} If match confirmed and truthy will return true, otherwise false\r\n */\n\n\nfunction foundTruthy(collection, identity, maxDepth = null) {\n  identity = singleProperty(identity);\n  if (isFalsy(identity)) return undefined;\n\n  function _foundTruthy(collection, identity, maxDepth, currentDepth = 0) {\n    if (containsKeys(collection, [identity])) return isTruthy(collection[identity]);\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return false;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key],\n            res = _foundTruthy(subcollection, identity, maxDepth, currentDepth + 1);\n\n      if (res) return true;\n    }\n    return false;\n  }\n\n  return _foundTruthy(collection, identity, maxDepth, 0);\n}\n/**\r\n * Validates if identity is equal to a property definition or contains a single property key.\r\n * @param {Property} identity\r\n * @return {String || boolean} If criteria matched will return property name as string, otherwise false\r\n */\n\n\nfunction singleProperty(identity) {\n  const propCount = length(identity);\n  if (propCount > 1) return false;\n  if (propCount === 1) return Object.keys(identity)[0];\n  if (propCount === 0) if (['string', 'number'].indexOf(getType(identity)) > -1) return identity;\n  return false;\n}\n/**\r\n * Determines if identity is non-falsy\r\n * @param {Any} identity\r\n * @return {boolean} Returns true if criteria matched, otherwise false.\r\n */\n\n\nfunction isTruthy(identity) {\n  return !isFalsy(identity);\n}\n/**\r\n * Determines if identity is falsy\r\n * @param {Any} identity\r\n * @return {boolean} Returns true if criteria matched, otherwise false.\r\n */\n\n\nfunction isFalsy(identity) {\n  if (falser(identity) === false) return true;\n  return false;\n}\n/**\r\n * Converts false-like values into actual boolean value of false\r\n * @param {Any} identity\r\n * @return {Any || boolean} Returns false is value is falsy, otherwise returns original value.\r\n */\n\n\nfunction falser(identity) {\n  if (isIterable(identity)) return identity;\n  if (['null', 'undefined'].indexOf(getType(identity)) > -1) return false;\n  if (['', 0, false].indexOf(identity) > -1) return false;\n  return identity;\n}\n/**\r\n * Check the length of the top-most depth of the identity\r\n * @param {Any} identity\r\n * @return {integer} Greater than or equal to 0.\r\n */\n\n\nfunction length(identity) {\n  if (['array', 'object'].indexOf(getType(identity)) === -1) return 0;\n  return Object.keys(identity).length;\n}\n/**\r\n * Performs deep search for each identity on collection, to shorten the identities to those that does meets the match criteria\r\n * @param {Any} collection\r\n * @param {Any} identities\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} Returns a collection of the same type as the 'identities' parameter provided with only the identities that were not matched.\r\n */\n\n\nfunction onlyMissing(collection, identities, maxDepth = null) {\n  if (getType(identities) === 'array') {\n    let result = [];\n    identities.forEach(identity => {\n      if (!exists(collection, identity, maxDepth)) result.push(identity);\n    });\n    return result;\n  }\n\n  if (getType(identities) === 'object') {\n    let result = {};\n    Object.keys(identities).forEach(key => {\n      let identity = identities[key];\n      if (!exists(collection, identity, maxDepth)) result[key] = identity;\n    });\n    return result;\n  }\n\n  if (!exists(collection, identities, maxDepth)) return identities;\n}\n/**\r\n * Performs deep search for each identity on collection, to shorten the identities to those that meets the match criteria\r\n * @param {Any} collection\r\n * @param {Any} identities\r\n * @param {Optional Number} maxDepth\r\n * @return {Any} Returns a collection of the same type as the 'identities' parameter provided with only the identities that matched.\r\n */\n\n\nfunction onlyExisting(collection, identities, maxDepth = null) {\n  if (getType(identities) === 'array') {\n    let result = [];\n    identities.forEach(identity => {\n      if (exists(collection, identity, maxDepth)) result.push(identity);\n    });\n    return result;\n  }\n\n  if (getType(identities) === 'object') {\n    let result = {};\n    Object.keys(identities).forEach(key => {\n      let identity = identities[key];\n      if (exists(collection, identity, maxDepth)) result[key] = identity;\n    });\n    return result;\n  }\n\n  if (exists(collection, identities, maxDepth)) return identities;\n}\n/**\r\n * Performs deep search on collection to find any match to the identity\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {boolean} If a match is confirmed will return true, otherwise false\r\n */\n\n\nfunction exists(collection, identity, maxDepth = null, currentDepth = 0) {\n  if (identical(collection, identity)) return true;\n  if (isIterable(identity)) if (sameType(collection, identity)) if (containsKeys(collection, Object.keys(identity))) {\n    const trimmed = trim(collection, Object.keys(identity));\n    if (identical(trimmed, identity)) return true;\n  }\n  if (maxDepth === null ? true : currentDepth < maxDepth) if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n    const key = keys[i],\n          subcollection = collection[key],\n          res = exists(subcollection, identity, maxDepth, currentDepth + 1);\n    if (res) return true;\n  }\n  return false;\n}\n/**\r\n * Performs deep search on collection to find all matches to the identity, will return a list of identities containing the match. If no matches found, it returns `undefined`.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {Array || undefined} identities\r\n */\n\n\nfunction deepFilter(collection, identity, maxDepth = null) {\n  var paths = locateAll(collection, identity, maxDepth);\n  if (paths === false) return undefined;\n  const results = paths.map(path => {\n    if (path === '') return collection;\n    path = path.split('.');\n    if (['array', 'object'].indexOf(getType(identity)) === -1) path.splice(-1, 1);\n    var result = collection;\n    if (!Array.isArray(path)) return result[path];\n    path.forEach(key => {\n      result = result[key];\n    });\n    return result;\n  });\n  return results;\n}\n/**\r\n * Performs deep search on collection to find all matches to the identity, returns a string array containing the location of all matches. If no matches found, it returns `false`.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {Array || false} Paths\r\n */\n\n\nfunction locateAll(collection, identity, maxDepth = null) {\n  var R = [];\n\n  function _locateAll(collection, identity, path = '', maxDepth, currentDepth) {\n    if (isIterable(identity)) if (sameType(collection, identity)) if (containsKeys(collection, Object.keys(identity))) {\n      const trimmed = trim(collection, Object.keys(identity));\n      if (identical(trimmed, identity)) R[R.length] = path;\n    }\n    if (identical(collection, identity)) R[R.length] = path;\n    var result = false;\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return result;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key];\n\n      _locateAll(subcollection, identity, (path === '' ? path : path + '.') + key, maxDepth, currentDepth + 1);\n    }\n  }\n\n  _locateAll(collection, identity, '', maxDepth, 0);\n\n  return R.length === 0 ? false : R;\n}\n/**\r\n * Performs deep search on collection to find a match to the identity, will return the identity containing of the first instance matched. If no matches found, it returns `undefined`.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional Number} maxDepth\r\n * @return {identity || undefined} identity\r\n */\n\n\nfunction deepGet(collection, identity, maxDepth = null) {\n  var path = locate(collection, identity, maxDepth);\n  if (path === false) return undefined;\n  if (path === '') return collection;\n  path = path.split('.');\n  if (['array', 'object'].indexOf(getType(identity)) === -1) path.splice(-1, 1);\n  var result = collection;\n  if (!Array.isArray(path)) return result[path];\n  path.forEach(key => {\n    result = result[key];\n  });\n  return result;\n}\n/**\r\n * Performs deep search on collection to find a match to the identity, will return the path of the first instance matched as string. If no matches found, returns `false`.\r\n * @param {Any} collection\r\n * @param {Any} identity\r\n * @param {Optional number} maxDepth\r\n * @return {string || false} path\r\n */\n\n\nfunction locate(collection, identity, maxDepth = null) {\n  function _locate(collection, identity, path = '', maxDepth, currentDepth) {\n    if (isIterable(identity)) if (sameType(collection, identity)) if (containsKeys(collection, Object.keys(identity))) {\n      const trimmed = trim(collection, Object.keys(identity));\n      if (identical(trimmed, identity)) return path;\n    }\n    if (identical(collection, identity)) return path;\n    var result = false;\n    if (maxDepth !== null) if (currentDepth >= maxDepth) return result;\n    if (isIterable(collection)) for (var i = 0, keys = Object.keys(collection), l = keys.length; i < l; i++) {\n      const key = keys[i],\n            subcollection = collection[key],\n            res = _locate(subcollection, identity, key, maxDepth, currentDepth + 1);\n\n      if (res) {\n        path = path === '' ? path : path + '.';\n        result = path + res;\n        break;\n      }\n    }\n    return result;\n  }\n\n  return _locate(collection, identity, '', maxDepth, 0);\n}\n/**\r\n * Trims an identity to only contain the specified properties.\r\n * @param {Any} identity\r\n * @param {Any} keyList\r\n * @return {Object or Array} Returns , otherwise false\r\n */\n\n\nfunction trim(identity, keyList) {\n  const identityType = getType(identity);\n  if (['array', 'object'].indexOf(identityType) === -1) return undefined;\n  const keyCount = keyList.length;\n  if (keyCount === 0) return undefined;\n  var newIdentity;\n\n  switch (identityType) {\n    case 'object':\n      newIdentity = {};\n      keyList.forEach(key => {\n        if (key in identity) newIdentity[key] = identity[key];\n      });\n      break;\n\n    case 'array':\n      newIdentity = [];\n      keyList.forEach(key => {\n        if (key in identity) newIdentity.push(identity[key]);\n      });\n      break;\n  }\n\n  return newIdentity;\n}\n/**\r\n * Check if identity contains all of the specified keys\r\n * @param {Any} identity\r\n * @param {Array} keyList\r\n * @return {boolean} true || false\r\n */\n\n\nfunction containsKeys(identity, keyList) {\n  const keyCount = keyList.length;\n  if (keyCount === 0 || !isIterable(identity)) return false;\n  const identitykeys = Object.keys(identity);\n  var result = true;\n\n  for (var i = 0; i < keyCount; i++) {\n    const key = '' + keyList[i];\n\n    if (identitykeys.indexOf(key) === -1) {\n      result = false;\n      break;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Check if identity has one or more keys to iterate\r\n * @param {Any} identity\r\n * @return {boolean} true || false\r\n */\n\n\nfunction isIterable(identity) {\n  if (['array', 'object'].indexOf(getType(identity)) === -1) return false;\n  if (Object.keys(identity).length === 0) return false;\n  return true;\n}\n/**\r\n * Compares two identities, will return either true if identical, otherwise false.\r\n * @param {Any} identityA\r\n * @param {Any} identityB\r\n * @return {boolean} true || false\r\n */\n\n\nfunction identical(identityA, identityB) {\n  const structureMatch = sameStructure(identityA, identityB);\n  if (structureMatch === false) return structureMatch;\n  if (['array', 'object'].indexOf(structureMatch) === -1) return identityA === identityB;\n  const Keys = Object.keys(identityA),\n        KeyCount = Keys.length;\n  var childMatch = true;\n\n  for (var i = 0; i < KeyCount; i++) {\n    const Key = Keys[i],\n          identicalMatch = identical(identityA[Key], identityB[Key]);\n\n    if (identicalMatch === false) {\n      childMatch = identicalMatch;\n      break;\n    }\n\n    ;\n  }\n\n  return childMatch;\n}\n/**\r\n * Compares data structure of two identities, will return either the dataType or true/false.\r\n * @param {Any} identityA\r\n * @param {Any} identityB\r\n * @return {String || False} DataType as string for positive match, otherwise false\r\n */\n\n\nfunction sameStructure(identityA, identityB) {\n  const typeMatch = sameType(identityA, identityB);\n  if (typeMatch === false) return false;\n\n  if (['array', 'object'].indexOf(typeMatch) > -1) {\n    const AKeys = Object.keys(identityA),\n          BKeys = Object.keys(identityB),\n          AKeyCount = AKeys.length,\n          BKeyCount = BKeys.length;\n    if (!(AKeyCount === BKeyCount)) return false;\n    if (AKeyCount === 0) return true;\n\n    for (var i = 0; i < AKeyCount; i++) {\n      if (AKeys[i] !== BKeys[i]) return false;\n    }\n  }\n\n  return typeMatch;\n}\n/**\r\n * Compares data type of two identities, will dataType if true.\r\n * @param {Any} identityA\r\n * @param {Any} identityB\r\n * @return {boolean} true || false\r\n */\n\n\nfunction sameType(identityA, identityB) {\n  const typeA = getType(identityA);\n  return typeA === getType(identityB) ? typeA : false;\n}\n/**\r\n * Gets data type; makes distintion between object, array, and null.\r\n * @param {Any} identity\r\n * @return {String} dataType\r\n */\n\n\nfunction getType(identity) {\n  if (identity === null) return 'null';\n  const it = typeof identity;\n  if (it === 'object') if (Array.isArray(identity)) return 'array';\n  return it;\n}\n\nvar mitsuketa = {\n  getType: function (identity) {\n    return getType(identity);\n  },\n  sameType: function (identityA, identityB) {\n    return sameType(identityA, identityB);\n  },\n  sameStructure: function (identityA, identityB) {\n    return sameStructure(identityA, identityB);\n  },\n  identical: function (identityA, identityB) {\n    return identical(identityA, identityB);\n  },\n  isIterable: function (identity) {\n    return isIterable(identity);\n  },\n  containsKeys: function (identity, keyList) {\n    return containsKeys(identity, keyList);\n  },\n  trim: function (identity, keyList) {\n    return trim(identity, keyList);\n  },\n  locate: function (collection, identity, maxDepth) {\n    return locate(collection, identity, maxDepth);\n  },\n  deepGet: function (collection, identity, maxDepth) {\n    return deepGet(collection, identity, maxDepth);\n  },\n  locateAll: function (collection, identity, maxDepth) {\n    return locateAll(collection, identity, maxDepth);\n  },\n  deepFilter: function (collection, identity, maxDepth) {\n    return deepFilter(collection, identity, maxDepth);\n  },\n  exists: function (collection, identity, maxDepth) {\n    return exists(collection, identity, maxDepth);\n  },\n  onlyExisting: function (collection, identities, maxDepth) {\n    return onlyExisting(collection, identities, maxDepth);\n  },\n  onlyMissing: function (collection, identities, maxDepth) {\n    return onlyMissing(collection, identities, maxDepth);\n  },\n  length: function (identity) {\n    return length(identity);\n  },\n  isFalsy: function (identity) {\n    return isFalsy(identity);\n  },\n  isTruthy: function (identity) {\n    return isTruthy(identity);\n  },\n  foundTruthy: function (collection, identity, maxDepth) {\n    return foundTruthy(collection, identity, maxDepth);\n  },\n  onlyTruthy: function (collection, identities, property, maxDepth) {\n    return onlyTruthy(collection, identities, property, maxDepth);\n  },\n  foundFalsy: function (collection, identity, maxDepth) {\n    return foundFalsy(collection, identity, maxDepth);\n  },\n  onlyFalsy: function (collection, identities, property, maxDepth) {\n    return onlyFalsy(collection, identities, property, maxDepth);\n  },\n  countMatches: function (collection, identity, nthDepth, maxDepth) {\n    return countMatches(collection, identity, nthDepth, maxDepth);\n  },\n  matchDepth: function (collection, identity, maxDepth) {\n    return matchDepth(collection, identity, maxDepth);\n  },\n  maxDepth: function (identity, maxLayer) {\n    return maxDepth(identity, maxLayer);\n  },\n  locate_Key: function (collection, keyName, maxDepth) {\n    return locate_Key(collection, keyName, maxDepth);\n  },\n  deepGet_Key: function (collection, keyName, maxDepth) {\n    return deepGet_Key(collection, keyName, maxDepth);\n  },\n  locateAll_Key: function (collection, keyName, maxDepth) {\n    return locateAll_Key(collection, keyName, maxDepth);\n  },\n  deepFilter_Key: function (collection, keyName, maxDepth) {\n    return deepFilter_Key(collection, keyName, maxDepth);\n  },\n  deepClone: function (identity, maxDepth, startDepth) {\n    return deepClone(identity, maxDepth, startDepth);\n  },\n  renameKey: function (identity, keyName, newKeyName, maxDepth) {\n    return renameKey(identity, keyName, newKeyName, maxDepth);\n  },\n  renameKeys: function (identity, keyName, newKeyName, maxDepth) {\n    return renameKeys(identity, keyName, newKeyName, maxDepth);\n  },\n  deepRemove_Key: function (identity, keyName, maxDepth) {\n    return deepRemove_Key(identity, keyName, maxDepth);\n  },\n  deepRemoveAll_Key: function (identity, keyName, maxDepth) {\n    return deepRemoveAll_Key(identity, keyName, maxDepth);\n  }\n};\nmodule.exports = exports = mitsuketa;", "function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };", "import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };", "import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };", "import defineProperty from \"./defineProperty.js\";\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? Object(arguments[r]) : {},\n      o = Object.keys(t);\n    \"function\" == typeof Object.getOwnPropertySymbols && o.push.apply(o, Object.getOwnPropertySymbols(t).filter(function (e) {\n      return Object.getOwnPropertyDescriptor(t, e).enumerable;\n    })), o.forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    });\n  }\n  return e;\n}\nexport { _objectSpread as default };", "/** @license react-json-editor-ajrm v2.5.14\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nclass JSONInput extends Component {\n  constructor(props) {\n    super(props);\n    this.updateInternalProps = this.updateInternalProps.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.update = this.update.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n    this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.scheduledUpdate = this.scheduledUpdate.bind(this);\n    this.setUpdateTime = this.setUpdateTime.bind(this);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.newSpan = this.newSpan.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.showPlaceholder = this.showPlaceholder.bind(this);\n    this.tokenize = this.tokenize.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPaste = this.onPaste.bind(this);\n    this.stopEvent = this.stopEvent.bind(this);\n    this.refContent = null;\n    this.refLabels = null;\n    this.updateInternalProps();\n    this.renderCount = 1;\n    this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n  }\n\n  updateInternalProps() {\n    let colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n    if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n    colors = theme;\n    if ('colors' in this.props) colors = {\n      default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n      string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n      number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n      colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n      keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n      keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n      primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n      error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n      background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n      background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n    };\n    this.colors = colors;\n    if ('style' in this.props) style = {\n      outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n      container: 'container' in this.props.style ? this.props.style.container : {},\n      warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n      errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n      body: 'body' in this.props.style ? this.props.style.body : {},\n      labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n      labels: 'labels' in this.props.style ? this.props.style.labels : {},\n      contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n    };else style = {\n      outerBox: {},\n      container: {},\n      warningBox: {},\n      errorMessage: {},\n      body: {},\n      labelColumn: {},\n      labels: {},\n      contentBox: {}\n    };\n    this.style = style;\n    this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n    const totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n    this.totalHeight = totalHeight;\n    this.totalWidth = totalWidth;\n\n    if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n      if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n    } else if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = false;\n    }\n\n    this.updateTime = false;\n    this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n    this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n  }\n\n  render() {\n    const id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n    this.renderCount++;\n    return React.createElement(\"div\", {\n      name: \"outer-box\",\n      id: id && id + '-outer-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'none',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }, style.outerBox)\n    }, confirmGood ? React.createElement(\"div\", {\n      style: {\n        opacity: hasError ? 0 : 1,\n        height: '30px',\n        width: '30px',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        transform: 'translate(-25%,25%)',\n        pointerEvents: 'none',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }\n    }, React.createElement(\"svg\", {\n      height: \"30px\",\n      width: \"30px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"green\",\n      opacity: \"0.85\",\n      d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n    }))) : void 0, React.createElement(\"div\", {\n      name: \"container\",\n      id: id && id + '-container',\n      style: _objectSpread({\n        display: 'block',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        fontFamily: 'Roboto, sans-serif'\n      }, style.container),\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      name: \"warning-box\",\n      id: id && id + '-warning-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'hidden',\n        height: hasError ? '60px' : '0px',\n        width: '100%',\n        margin: 0,\n        backgroundColor: colors.background_warning,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.warningBox),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        top: 0,\n        left: 0,\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"svg\", {\n      height: \"25px\",\n      width: \"25px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"red\",\n      d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n    }))))), React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: 'calc(100% - 60px)',\n        margin: 0,\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        position: 'absolute',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, this.renderErrorMessage())), React.createElement(\"div\", {\n      name: \"body\",\n      id: id && id + '-body',\n      style: _objectSpread({\n        display: 'flex',\n        overflow: 'none',\n        height: hasError ? 'calc(100% - 60px)' : '100%',\n        width: '',\n        margin: 0,\n        resize: 'none',\n        fontFamily: 'Roboto Mono, Monaco, monospace',\n        fontSize: '11px',\n        backgroundColor: colors.background,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.body),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      name: \"labels\",\n      id: id && id + '-labels',\n      ref: ref => this.refLabels = ref,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '44px',\n        margin: 0,\n        padding: '5px 0px 5px 10px',\n        overflow: 'hidden',\n        color: '#D4D4D4'\n      }, style.labelColumn),\n      onClick: this.onClick\n    }, this.renderLabels()), React.createElement(\"span\", {\n      id: id,\n      ref: ref => this.refContent = ref,\n      contentEditable: true,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '',\n        flex: 1,\n        margin: 0,\n        padding: '5px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-line',\n        color: '#D4D4D4',\n        outline: 'none'\n      }, style.contentBox),\n      dangerouslySetInnerHTML: this.createMarkup(markupText),\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      onScroll: this.onScroll,\n      onPaste: this.onPaste,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: false\n    }))));\n  }\n\n  renderErrorMessage() {\n    const locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n    if (!error) return void 0;\n    return React.createElement(\"p\", {\n      style: _objectSpread({\n        color: 'red',\n        fontSize: '12px',\n        position: 'absolute',\n        width: 'calc(100% - 60px)',\n        height: '60px',\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n        paddingRight: '10px',\n        overflowWrap: 'break-word',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }, style.errorMessage)\n    }, format(locale.format, error));\n  }\n\n  renderLabels() {\n    const colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n    let labels = new Array(lines);\n\n    for (var i = 0; i < lines - 1; i++) labels[i] = i + 1;\n\n    return labels.map(number => {\n      const color = number !== errorLine ? colors.default : 'red';\n      return React.createElement(\"div\", {\n        key: number,\n        style: _objectSpread({}, style.labels, {\n          color: color\n        })\n      }, number);\n    });\n  }\n\n  createMarkup(markupText) {\n    if (markupText === undefined) return {\n      __html: ''\n    };\n    return {\n      __html: '' + markupText\n    };\n  }\n\n  newSpan(i, token, depth) {\n    let colors = this.colors,\n        type = token.type,\n        string = token.string;\n    let color = '';\n\n    switch (type) {\n      case 'string':\n      case 'number':\n      case 'primitive':\n      case 'error':\n        color = colors[token.type];\n        break;\n\n      case 'key':\n        if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n        break;\n\n      case 'symbol':\n        if (string === ':') color = colors.colon;else color = colors.default;\n        break;\n\n      default:\n        color = colors.default;\n        break;\n    }\n\n    if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n    return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n  }\n\n  getCursorPosition(countBR) {\n    /**\r\n     * Need to deprecate countBR\r\n     * It is used to differenciate between good markup render, and aux render when error found\r\n     * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n     * Find a way to consolidate render styles\r\n     */\n    const isChildOf = node => {\n      while (node !== null) {\n        if (node === this.refContent) return true;\n        node = node.parentNode;\n      }\n\n      return false;\n    };\n\n    let selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode)) {\n      node = selection.focusNode;\n      charCount = selection.focusOffset;\n\n      while (node) {\n        if (node === this.refContent) break;\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n          charCount += node.textContent.length;\n        } else {\n          node = node.parentNode;\n          if (node === null) break;\n        }\n      }\n    }\n\n    return charCount + linebreakCount;\n  }\n\n  setCursorPosition(nextPosition) {\n    if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n    const createRange = (node, chars, range) => {\n      if (!range) {\n        range = document.createRange();\n        range.selectNode(node);\n        range.setStart(node, 0);\n      }\n\n      if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n      } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n            range.setEnd(node, chars.count);\n            chars.count = 0;\n          }\n        } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n          range = createRange(node.childNodes[lp], chars, range);\n          if (chars.count === 0) break;\n        }\n      }\n\n      return range;\n    };\n\n    const setPosition = chars => {\n      if (chars < 0) return;\n      let selection = window.getSelection(),\n          range = createRange(this.refContent, {\n        count: chars\n      });\n      if (!range) return;\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    };\n\n    if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n  }\n\n  update(cursorOffset = 0, updateCursorPosition = true) {\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onChange' in this.props) this.props.onChange({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    let cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n    this.setState({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    this.updateTime = false;\n    if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n  }\n\n  scheduledUpdate() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    const {\n      updateTime\n    } = this;\n    if (updateTime === false) return;\n    if (updateTime > new Date().getTime()) return;\n    this.update();\n  }\n\n  setUpdateTime() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n  }\n\n  stopEvent(event) {\n    if (!event) return;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onKeyPress(event) {\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n    if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n    if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n  }\n\n  onKeyDown(event) {\n    const viewOnly = !!this.props.viewOnly;\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n    switch (event.key) {\n      case 'Tab':\n        this.stopEvent(event);\n        if (viewOnly) break;\n        document.execCommand(\"insertText\", false, \"  \");\n        this.setUpdateTime();\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        if (viewOnly) this.stopEvent(event);\n        this.setUpdateTime();\n        break;\n\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.setUpdateTime();\n        break;\n\n      case 'a':\n      case 'c':\n        if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n        break;\n\n      default:\n        if (viewOnly) this.stopEvent(event);\n        break;\n    }\n  }\n\n  onPaste(event) {\n    if (this.props.viewOnly) {\n      this.stopEvent(event);\n    } else {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    this.update();\n  }\n\n  onClick() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n  }\n\n  onBlur() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onBlur' in this.props) this.props.onBlur({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  onScroll(event) {\n    this.refLabels.scrollTop = event.target.scrollTop;\n  }\n\n  componentDidUpdate() {\n    this.updateInternalProps();\n    this.showPlaceholder();\n  }\n\n  componentDidMount() {\n    this.showPlaceholder();\n  }\n\n  componentWillUnmount() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  showPlaceholder() {\n    const placeholderDoesNotExist = !('placeholder' in this.props);\n    if (placeholderDoesNotExist) return;\n    const {\n      placeholder\n    } = this.props;\n    const placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n    if (placeholderHasEmptyValues) return;\n    const {\n      prevPlaceholder,\n      jsObject\n    } = this.state;\n    const {\n      resetConfiguration\n    } = this;\n    const placeholderDataType = getType(placeholder);\n    const unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n    if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n    const samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n    let componentShouldUpdate = !samePlaceholderValues;\n\n    if (!componentShouldUpdate) {\n      if (resetConfiguration) {\n        /**\r\n         * If 'reset' property is set true or is truthy,\r\n         * any difference between placeholder and current value\r\n         * should trigger component re-render\r\n         */\n        if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n      }\n    }\n\n    if (!componentShouldUpdate) return;\n    const data = this.tokenize(placeholder);\n    this.setState({\n      prevPlaceholder: placeholder,\n      plainText: data.indentation,\n      markupText: data.markup,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  tokenize(something) {\n    if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n    const locale = this.props.locale || defaultLocale;\n    const newSpan = this.newSpan;\n    /**\r\n     *     DOM NODE || ONBLUR OR UPDATE\r\n     */\n\n    if ('nodeType' in something) {\n      const containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n      if (!hasChildren) return '';\n      const children = containerNode.childNodes;\n      let buffer = {\n        tokens_unknown: [],\n        tokens_proto: [],\n        tokens_split: [],\n        tokens_fallback: [],\n        tokens_normalize: [],\n        tokens_merge: [],\n        tokens_plainText: '',\n        indented: '',\n        json: '',\n        jsObject: undefined,\n        markup: ''\n      };\n\n      for (var i = 0; i < children.length; i++) {\n        let child = children[i];\n        let info = {};\n\n        switch (child.nodeName) {\n          case 'SPAN':\n            info = {\n              string: child.textContent,\n              type: child.attributes.type.textContent\n            };\n            buffer.tokens_unknown.push(info);\n            break;\n\n          case 'DIV':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          case 'BR':\n            if (child.textContent === '') buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            });\n            break;\n\n          case '#text':\n            buffer.tokens_unknown.push({\n              string: child.wholeText,\n              type: 'unknown'\n            });\n            break;\n\n          case 'FONT':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          default:\n            console.error('Unrecognized node:', {\n              child\n            });\n            break;\n        }\n      }\n\n      function quarkize(text, prefix = '') {\n        let buffer = {\n          active: false,\n          string: '',\n          number: '',\n          symbol: '',\n          space: '',\n          delimiter: '',\n          quarks: []\n        };\n\n        function pushAndStore(char, type) {\n          switch (type) {\n            case 'symbol':\n            case 'delimiter':\n              if (buffer.active) buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = type;\n              buffer[buffer.active] = char;\n              break;\n\n            default:\n              if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n              } else buffer[type] += char;\n\n              break;\n          }\n        }\n\n        function finalPush() {\n          if (buffer.active) {\n            buffer.quarks.push({\n              string: buffer[buffer.active],\n              type: prefix + '-' + buffer.active\n            });\n            buffer[buffer.active] = '';\n            buffer.active = false;\n          }\n        }\n\n        for (var i = 0; i < text.length; i++) {\n          const char = text.charAt(i);\n\n          switch (char) {\n            case '\"':\n            case \"'\":\n              pushAndStore(char, 'delimiter');\n              break;\n\n            case ' ':\n            case '\\u00A0':\n              pushAndStore(char, 'space');\n              break;\n\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case ':':\n            case ',':\n              pushAndStore(char, 'symbol');\n              break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n              break;\n\n            case '-':\n              if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            case '.':\n              if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            default:\n              pushAndStore(char, 'string');\n              break;\n          }\n        }\n\n        finalPush();\n        return buffer.quarks;\n      }\n\n      for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n        let token = buffer.tokens_unknown[i];\n        buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n      }\n\n      function validToken(string, type) {\n        const quotes = '\\'\"';\n        let firstChar = '',\n            lastChar = '',\n            quoteType = false;\n\n        switch (type) {\n          case 'primitive':\n            if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n            break;\n\n          case 'string':\n            if (string.length < 2) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n            if (quoteType === -1) return false;\n            if (firstChar !== lastChar) return false;\n\n            for (var i = 0; i < string.length; i++) {\n              if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n            }\n\n            break;\n\n          case 'key':\n            if (string.length === 0) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n            if (quoteType > -1) {\n              if (string.length === 1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n            } else {\n              const nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n              for (var i = 0; i < nonAlphanumeric.length; i++) {\n                const nonAlpha = nonAlphanumeric.charAt(i);\n                if (string.indexOf(nonAlpha) > -1) return false;\n              }\n            }\n\n            break;\n\n          case 'number':\n            for (var i = 0; i < string.length; i++) {\n              if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                if ('-' !== string.charAt(0)) return false;\n              } else if ('.' !== string.charAt(i)) return false;\n            }\n\n            break;\n\n          case 'symbol':\n            if (string.length > 1) return false;\n            if ('{[:]},'.indexOf(string) === -1) return false;\n            break;\n\n          case 'colon':\n            if (string.length > 1) return false;\n            if (':' !== string) return false;\n            break;\n\n          default:\n            return true;\n            break;\n        }\n\n        return true;\n      }\n\n      for (var i = 0; i < buffer.tokens_proto.length; i++) {\n        let token = buffer.tokens_proto[i];\n\n        if (token.type.indexOf('proto') === -1) {\n          if (!validToken(token.string, token.type)) {\n            buffer.tokens_split = buffer.tokens_split.concat(quarkize(token.string, 'split'));\n          } else buffer.tokens_split.push(token);\n        } else buffer.tokens_split.push(token);\n      }\n\n      for (var i = 0; i < buffer.tokens_split.length; i++) {\n        let token = buffer.tokens_split[i];\n        let type = token.type,\n            string = token.string,\n            length = string.length,\n            fallback = [];\n\n        if (type.indexOf('-') > -1) {\n          type = type.slice(type.indexOf('-') + 1);\n          if (type !== 'string') fallback.push('string');\n          fallback.push('key');\n          fallback.push('error');\n        }\n\n        let tokul = {\n          string: string,\n          length: length,\n          type: type,\n          fallback: fallback\n        };\n        buffer.tokens_fallback.push(tokul);\n      }\n\n      function tokenFollowed() {\n        const last = buffer.tokens_normalize.length - 1;\n        if (last < 1) return false;\n\n        for (var i = last; i >= 0; i--) {\n          const previousToken = buffer.tokens_normalize[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n        let token = buffer.tokens_fallback[i];\n        const type = token.type,\n              string = token.string;\n        let normalToken = {\n          type: type,\n          string: string\n        };\n\n        switch (type) {\n          case 'symbol':\n          case 'colon':\n            if (buffer2.stringOpen) {\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            }\n\n            switch (string) {\n              case '[':\n              case '{':\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ']':\n              case '}':\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ',':\n                if (tokenFollowed().type === 'colon') break;\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ':':\n                normalToken.type = 'colon';\n                buffer2.isValue = true;\n                break;\n            }\n\n            break;\n\n          case 'delimiter':\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n            if (!buffer2.stringOpen) {\n              buffer2.stringOpen = string;\n              break;\n            }\n\n            if (i > 0) {\n              const previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n              if (_type === 'string' && _char === '\\\\') break;\n            }\n\n            if (buffer2.stringOpen === string) {\n              buffer2.stringOpen = false;\n              break;\n            }\n\n            break;\n\n          case 'primitive':\n          case 'string':\n            if (['false', 'true', 'null', 'undefined'].indexOf(string) > -1) {\n              const lastIndex = buffer.tokens_normalize.length - 1;\n\n              if (lastIndex >= 0) {\n                if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                  normalToken.type = 'primitive';\n                  break;\n                }\n\n                normalToken.type = 'string';\n                break;\n              }\n\n              normalToken.type = 'primitive';\n              break;\n            }\n\n            if (string === '\\n') if (!buffer2.stringOpen) {\n              normalToken.type = 'linebreak';\n              break;\n            }\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'space':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'number':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          default:\n            break;\n        }\n\n        buffer.tokens_normalize.push(normalToken);\n      }\n\n      for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n        const token = buffer.tokens_normalize[i];\n        let mergedToken = {\n          string: token.string,\n          type: token.type,\n          tokens: [i]\n        };\n        if (['symbol', 'colon'].indexOf(token.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n          let count = 0;\n\n          for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n            const nextToken = buffer.tokens_normalize[u];\n            if (token.type !== nextToken.type) break;\n            mergedToken.string += nextToken.string;\n            mergedToken.tokens.push(u);\n            count++;\n          }\n\n          i += count;\n        }\n        buffer.tokens_merge.push(mergedToken);\n      }\n\n      const quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n      var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n      buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      function setError(tokenID, reason, offset = 0) {\n        error = {\n          token: tokenID,\n          line: line,\n          reason: reason\n        };\n        buffer.tokens_merge[tokenID + offset].type = 'error';\n      }\n\n      function followedBySymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n        for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n          const nextToken = buffer.tokens_merge[i];\n\n          switch (nextToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(nextToken.string) > -1) return i;else return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function followsSymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(previousToken.string) > -1) return true;\n              return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function typeFollowed(tokenID) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken.type;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let bracketList = [];\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        if (error) break;\n        let token = buffer.tokens_merge[i],\n            string = token.string,\n            type = token.type,\n            found = false;\n\n        switch (type) {\n          case 'space':\n            break;\n\n          case 'linebreak':\n            line++;\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '{':\n              case '[':\n                found = followsSymbol(i, ['}', ']']);\n\n                if (found) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: buffer.tokens_merge[found].string,\n                    secondToken: string\n                  }));\n                  break;\n                }\n\n                if (string === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                    firstToken: \"[\",\n                    secondToken: [\":\", \"[\", \",\"]\n                  }));\n                  break;\n                }\n                if (string === '{') if (followsSymbol(i, ['{'])) {\n                  setError(i, format(locale.invalidToken.double, {\n                    token: \"{\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case '}':\n              case ']':\n                if (string === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                  setError(i, format(locale.brace.curly.missingOpen));\n                  break;\n                }\n                if (string === '}') if (followsSymbol(i, [','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \",\",\n                    secondToken: \"}\"\n                  }));\n                  break;\n                }\n                if (string === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                  setError(i, format(locale.brace.square.missingOpen));\n                  break;\n                }\n                if (string === ']') if (followsSymbol(i, [':'])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \":\",\n                    secondToken: \"]\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case ',':\n                found = followsSymbol(i, ['{']);\n\n                if (found) {\n                  if (followedBySymbol(i, ['}'])) {\n                    setError(i, format(locale.brace.curly.cannotWrap, {\n                      token: \",\"\n                    }));\n                    break;\n                  }\n\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \"{\",\n                    secondToken: \",\"\n                  }));\n                  break;\n                }\n\n                if (followedBySymbol(i, ['}', ',', ']'])) {\n                  setError(i, format(locale.noTrailingOrLeadingComma));\n                  break;\n                }\n\n                found = typeFollowed(i);\n\n                switch (found) {\n                  case 'key':\n                  case 'colon':\n                    setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                      firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                      secondTerm: locale.symbols.comma\n                    }));\n                    break;\n\n                  case 'symbol':\n                    if (followsSymbol(i, ['{'])) {\n                      setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                        firstToken: \"{\",\n                        secondToken: \",\"\n                      }));\n                      break;\n                    }\n\n                    break;\n\n                  default:\n                    break;\n                }\n\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              default:\n                break;\n            }\n\n            buffer.json += string;\n            break;\n\n          case 'colon':\n            found = followsSymbol(i, ['[']);\n\n            if (found && followedBySymbol(i, [']'])) {\n              setError(i, format(locale.brace.square.cannotWrap, {\n                token: \":\"\n              }));\n              break;\n            }\n\n            if (found) {\n              setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                firstToken: \"[\",\n                secondToken: \":\"\n              }));\n              break;\n            }\n\n            if (typeFollowed(i) !== 'key') {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.key\n              }));\n              break;\n            }\n\n            if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.value\n              }));\n              break;\n            }\n\n            buffer2.isValue = true;\n            buffer.json += string;\n            break;\n\n          case 'key':\n          case 'string':\n            let firstChar = string.charAt(0),\n                lastChar = string.charAt(string.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n            if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n              setError(i, format(locale.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if ('string' === type) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n              setError(i, format(locale.string.mustBeWrappedByQuotes));\n              break;\n            }\n            if ('key' === type) if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.types.key,\n                secondTerm: locale.symbols.colon\n              }));\n            }\n            if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < string.length; h++) {\n              if (error) break;\n              const c = string.charAt(h);\n\n              if (alphanumeric.indexOf(c) === -1) {\n                setError(i, format(locale.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n            if (firstChar === \"'\") string = '\"' + string.slice(1, -1) + '\"';else if (firstChar !== '\"') string = '\"' + string + '\"';\n            if ('key' === type) if ('key' === typeFollowed(i)) {\n              if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                break;\n              }\n              setError(i, format(locale.key.spaceMissingQuotes));\n              break;\n            }\n            if ('key' === type) if (!followsSymbol(i, ['{', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"{\", \",\"]\n              }));\n              break;\n            }\n            if ('string' === type) if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n            if ('key' === type) if (buffer2.isValue) {\n              setError(i, format(locale.string.unexpectedKey));\n              break;\n            }\n            if ('string' === type) if (!buffer2.isValue) {\n              setError(i, format(locale.key.unexpectedString));\n              break;\n            }\n            buffer.json += string;\n            break;\n\n          case 'number':\n          case 'primitive':\n            if (followsSymbol(i, ['{'])) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            } else if (typeFollowed(i) === 'key') {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n            } else if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n\n            if (type !== 'key') if (!buffer2.isValue) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            }\n            if (type === 'primitive') if (string === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n              badToken: \"undefined\",\n              goodToken: \"null\"\n            }));\n            buffer.json += string;\n            break;\n        }\n      }\n\n      let noEscapedSingleQuote = '';\n\n      for (var i = 0; i < buffer.json.length; i++) {\n        let current = buffer.json.charAt(i),\n            next = '';\n\n        if (i + 1 < buffer.json.length) {\n          next = buffer.json.charAt(i + 1);\n\n          if (current === '\\\\' && next === \"'\") {\n            noEscapedSingleQuote += next;\n            i++;\n            continue;\n          }\n        }\n\n        noEscapedSingleQuote += current;\n      }\n\n      buffer.json = noEscapedSingleQuote;\n\n      if (!error) {\n        const maxIterations = Math.ceil(bracketList.length / 2);\n        let round = 0,\n            delta = false;\n\n        function removePair(index) {\n          bracketList.splice(index + 1, 1);\n          bracketList.splice(index, 1);\n          if (!delta) delta = true;\n        }\n\n        while (bracketList.length > 0) {\n          delta = false;\n\n          for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n            const pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n            if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n          }\n\n          round++;\n          if (!delta) break;\n          if (round >= maxIterations) break;\n        }\n\n        if (bracketList.length > 0) {\n          const _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n          line = bracketList[0].line;\n          setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n        }\n      }\n\n      if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n        buffer.jsObject = JSON.parse(buffer.json);\n      } catch (err) {\n        const errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n        if (subsMark === -1) throw new Error('Error parsing failed');\n        const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n        let charTotal = 0,\n            tokenIndex = 0,\n            token = false,\n            _line = 1,\n            exitWhile = false;\n\n        while (charTotal < errPosition && !exitWhile) {\n          token = buffer.tokens_merge[tokenIndex];\n          if ('linebreak' === token.type) _line++;\n          if (['space', 'linebreak'].indexOf(token.type) === -1) charTotal += token.string.length;\n          if (charTotal >= errPosition) break;\n          tokenIndex++;\n          if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n        }\n\n        line = _line;\n        let backslashCount = 0;\n\n        for (let i = 0; i < token.string.length; i++) {\n          const char = token.string.charAt(i);\n          if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n            if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n              setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                token: '\\\\'\n              }));\n            }\n            backslashCount = 0;\n          }\n        }\n\n        if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n          token: token.string\n        }));\n      }\n      let _line = 1,\n          _depth = 0;\n\n      function newIndent() {\n        var space = [];\n\n        for (var i = 0; i < _depth * 2; i++) space.push('&nbsp;');\n\n        return space.join('');\n      }\n\n      function newLineBreak(byPass = false) {\n        _line++;\n\n        if (_depth > 0 || byPass) {\n          return '<br>';\n        }\n\n        return '';\n      }\n\n      function newLineBreakAndIndent(byPass = false) {\n        return newLineBreak(byPass) + newIndent();\n      }\n\n      ;\n      if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        const token = buffer.tokens_merge[i],\n              string = token.string,\n              type = token.type;\n\n        switch (type) {\n          case 'space':\n          case 'linebreak':\n            break;\n\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n            break;\n\n          case 'key':\n            buffer.markup += newLineBreakAndIndent() + newSpan(i, token, _depth);\n            break;\n\n          case 'colon':\n            buffer.markup += newSpan(i, token, _depth) + '&nbsp;';\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '[':\n              case '{':\n                buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n                _depth++;\n                break;\n\n              case ']':\n              case '}':\n                _depth--;\n\n                const islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                buffer.markup += _adjustment + newSpan(i, token, _depth);\n                break;\n\n              case ',':\n                buffer.markup += newSpan(i, token, _depth);\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (error) {\n        let _line_fallback = 1;\n\n        function countCarrigeReturn(string) {\n          let count = 0;\n\n          for (var i = 0; i < string.length; i++) {\n            if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n          }\n\n          return count;\n        }\n\n        _line = 1;\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          const token = buffer.tokens_merge[i],\n                type = token.type,\n                string = token.string;\n          if (type === 'linebreak') _line++;\n          buffer.markup += newSpan(i, token, _depth);\n          _line_fallback += countCarrigeReturn(string);\n        }\n\n        _line++;\n        _line_fallback++;\n        if (_line < _line_fallback) _line = _line_fallback;\n      }\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        let token = buffer.tokens_merge[i];\n        buffer.indented += token.string;\n        if (['space', 'linebreak'].indexOf(token.type) === -1) buffer.tokens_plainText += token.string;\n      }\n\n      if (error) {\n        function isFunction(functionToCheck) {\n          return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n        }\n\n        if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n      }\n\n      return {\n        tokens: buffer.tokens_merge,\n        noSpaces: buffer.tokens_plainText,\n        indented: buffer.indented,\n        json: buffer.json,\n        jsObject: buffer.jsObject,\n        markup: buffer.markup,\n        lines: _line,\n        error: error\n      };\n    }\n\n    ;\n    /**\r\n     *     JS OBJECTS || PLACEHOLDER\r\n     */\n\n    if (!('nodeType' in something)) {\n      let buffer = {\n        inputText: JSON.stringify(something),\n        position: 0,\n        currentChar: '',\n        tokenPrimary: '',\n        tokenSecondary: '',\n        brackets: [],\n        isValue: false,\n        stringOpen: false,\n        stringStart: 0,\n        tokens: []\n      };\n\n      function escape_character() {\n        if (buffer.currentChar !== '\\\\') return false;\n        return true;\n      }\n\n      function extract(string, position) {\n        return string.slice(0, position) + string.slice(position + 1);\n      }\n\n      function determine_string() {\n        if ('\\'\"'.indexOf(buffer.currentChar) === -1) return false;\n\n        if (!buffer.stringOpen) {\n          add_tokenSecondary();\n          buffer.stringStart = buffer.position;\n          buffer.stringOpen = buffer.currentChar;\n          return true;\n        }\n\n        if (buffer.stringOpen === buffer.currentChar) {\n          add_tokenSecondary();\n          const stringToken = buffer.inputText.substring(buffer.stringStart, buffer.position + 1);\n          add_tokenPrimary(stringToken);\n          buffer.stringOpen = false;\n          return true;\n        }\n\n        return false;\n      }\n\n      function determine_value() {\n        if (':,{}[]'.indexOf(buffer.currentChar) === -1) return false;\n        if (buffer.stringOpen) return false;\n        add_tokenSecondary();\n        add_tokenPrimary(buffer.currentChar);\n\n        switch (buffer.currentChar) {\n          case ':':\n            buffer.isValue = true;\n            return true;\n            break;\n\n          case '{':\n          case '[':\n            buffer.brackets.push(buffer.currentChar);\n            break;\n\n          case '}':\n          case ']':\n            buffer.brackets.pop();\n            break;\n        }\n\n        if (buffer.currentChar !== ':') buffer.isValue = buffer.brackets[buffer.brackets.length - 1] === '[';\n        return true;\n      }\n\n      function add_tokenSecondary() {\n        if (buffer.tokenSecondary.length === 0) return false;\n        buffer.tokens.push(buffer.tokenSecondary);\n        buffer.tokenSecondary = '';\n        return true;\n      }\n\n      function add_tokenPrimary(value) {\n        if (value.length === 0) return false;\n        buffer.tokens.push(value);\n        return true;\n      }\n\n      for (var i = 0; i < buffer.inputText.length; i++) {\n        buffer.position = i;\n        buffer.currentChar = buffer.inputText.charAt(buffer.position);\n        const a = determine_value(),\n              b = determine_string(),\n              c = escape_character();\n        if (!a && !b && !c) if (!buffer.stringOpen) buffer.tokenSecondary += buffer.currentChar;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        isValue: false,\n        tokens: []\n      };\n      buffer2.tokens = buffer.tokens.map(token => {\n        let type = '',\n            string = '',\n            value = '';\n\n        switch (token) {\n          case ',':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case ':':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = true;\n            break;\n\n          case '{':\n          case '[':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.push(token);\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case '}':\n          case ']':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.pop();\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case 'undefined':\n            type = 'primitive';\n            string = token;\n            value = undefined;\n            break;\n\n          case 'null':\n            type = 'primitive';\n            string = token;\n            value = null;\n            break;\n\n          case 'false':\n            type = 'primitive';\n            string = token;\n            value = false;\n            break;\n\n          case 'true':\n            type = 'primitive';\n            string = token;\n            value = true;\n            break;\n\n          default:\n            const C = token.charAt(0);\n\n            function stripQuotesFromKey(text) {\n              if (text.length === 0) return text;\n              if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n              let wrappedInQuotes = false;\n\n              for (var i = 0; i < 2; i++) {\n                if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                  wrappedInQuotes = true;\n                  break;\n                }\n              }\n\n              if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n              const nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = ((nonAlphaNumeric, text) => {\n                let numberAndLetter = false;\n\n                for (var i = 0; i < text.length; i++) {\n                  if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                  if (isNaN(text.charAt(i))) {\n                    numberAndLetter = true;\n                    break;\n                  }\n                }\n\n                return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n              })(nonAlphaNumeric, text),\n                    hasQuotes = (string => {\n                for (var i = 0; i < string.length; i++) {\n                  if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                }\n\n                return false;\n              })(nonAlphaNumeric);\n\n              if (hasQuotes) {\n                let newText = '';\n                const charList = text.split('');\n\n                for (var ii = 0; ii < charList.length; ii++) {\n                  let char = charList[ii];\n                  if ([\"'\", '\"'].indexOf(char) > -1) char = '\\\\' + char;\n                  newText += char;\n                }\n\n                text = newText;\n              }\n\n              if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n            }\n\n            if ('\\'\"'.indexOf(C) > -1) {\n              if (buffer2.isValue) type = 'string';else type = 'key';\n              if (type === 'key') string = stripQuotesFromKey(token);\n\n              if (type === 'string') {\n                string = '';\n                const charList2 = token.slice(1, -1).split('');\n\n                for (var ii = 0; ii < charList2.length; ii++) {\n                  let char = charList2[ii];\n                  if ('\\'\\\"'.indexOf(char) > -1) char = '\\\\' + char;\n                  string += char;\n                }\n\n                string = \"'\" + string + \"'\";\n              }\n\n              value = string;\n              break;\n            }\n\n            if (!isNaN(token)) {\n              type = 'number';\n              string = token;\n              value = Number(token);\n              break;\n            }\n\n            if (token.length > 0) if (!buffer2.isValue) {\n              type = 'key';\n              string = token;\n              if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n              value = string;\n              break;\n            }\n        }\n\n        return {\n          type: type,\n          string: string,\n          value: value,\n          depth: buffer2.brackets.length\n        };\n      });\n      let clean = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        clean += token.string;\n      }\n\n      function indent(number) {\n        var space = [];\n\n        for (var i = 0; i < number * 2; i++) space.push(' ');\n\n        return (number > 0 ? '\\n' : '') + space.join('');\n      }\n\n      ;\n      let indentation = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n\n        switch (token.string) {\n          case '[':\n          case '{':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) indentation += token.string + indent(token.depth);else indentation += token.string;\n            break;\n\n          case ']':\n          case '}':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(token.depth) + token.string;else indentation += token.string;\n            break;\n\n          case ':':\n            indentation += token.string + ' ';\n            break;\n\n          case ',':\n            indentation += token.string + indent(token.depth);\n            break;\n\n          default:\n            indentation += token.string;\n            break;\n        }\n      }\n\n      let lines = 1;\n\n      function indentII(number) {\n        var space = [];\n        if (number > 0) lines++;\n\n        for (var i = 0; i < number * 2; i++) space.push('&nbsp;');\n\n        return (number > 0 ? '<br>' : '') + space.join('');\n      }\n\n      ;\n      let markup = '';\n      const lastIndex = buffer2.tokens.length - 1;\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        let span = newSpan(i, token, token.depth);\n\n        switch (token.string) {\n          case '{':\n          case '[':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) markup += span + indentII(token.depth);else markup += span;\n            break;\n\n          case '}':\n          case ']':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) markup += indentII(token.depth) + (lastIndex === i ? '<br>' : '') + span;else markup += span;\n            break;\n\n          case ':':\n            markup += span + ' ';\n            break;\n\n          case ',':\n            markup += span + indentII(token.depth);\n            break;\n\n          default:\n            markup += span;\n            break;\n        }\n      }\n\n      lines += 2;\n      return {\n        tokens: buffer2.tokens,\n        noSpaces: clean,\n        indented: indentation,\n        json: JSON.stringify(something),\n        jsObject: something,\n        markup: markup,\n        lines: lines\n      };\n    }\n  }\n\n}\n\nexport default JSONInput;", "const dark_vscode_tribute = {\n  default: '#D4D4D4',\n  background: '#1E1E1E',\n  background_warning: '#1E1E1E',\n  string: '#CE8453',\n  number: '#B5CE9F',\n  colon: '#49B8F7',\n  keys: '#9CDCFE',\n  keys_whiteSpace: '#AF74A5',\n  primitive: '#6392C6'\n};\nconst light_mitsuketa_tribute = {\n  default: '#D4D4D4',\n  background: '#FCFDFD',\n  background_warning: '#FEECEB',\n  string: '#FA7921',\n  number: '#70CE35',\n  colon: '#49B8F7',\n  keys: '#59A5D8',\n  keys_whiteSpace: '#835FB6',\n  primitive: '#386FA4'\n};\nconst themes = {\n  dark_vscode_tribute: dark_vscode_tribute,\n  light_mitsuketa_tribute: light_mitsuketa_tribute\n};\nexport default themes;", "import { getType, locate } from './mitsuketa';\nconst err = {\n  getCaller: (skip = 1) => {\n    // A somewhat hacky solution that will yield different results in different JS engines. \n    // Since we only call this function when an error will actually be thrown we typically don't \n    // rally mind the performance impact this might have if called too often.\n    // Lucky for us we use nodeJS and thus only V8.\n    const stackTrace = new Error().stack;\n    var callerName = stackTrace.replace(/^Error\\s+/, '');\n    callerName = callerName.split(\"\\n\")[skip];\n    callerName = callerName.replace(/^\\s+at Object./, '').replace(/^\\s+at /, '').replace(/ \\(.+\\)$/, '');\n    return callerName;\n  },\n  throwError: (fxName = 'unknown function', paramName = 'unknown parameter', expectation = 'to be defined') => {\n    throw ['@', fxName, '(): Expected parameter \\'', paramName, '\\' ', expectation].join('');\n  },\n  isUndefined: (paramName = '<unknown parameter>', param) => {\n    if ([null, undefined].indexOf(param) > -1) err.throwError(err.getCaller(2), paramName);\n  },\n  isFalsy: (paramName = '<unknown parameter>', param) => {\n    if (!param) err.throwError(err.getCaller(2), paramName);\n  },\n  isNoneOf: (paramName = '<unknown parameter>', param, contains = []) => {\n    if (contains.indexOf(param) === -1) err.throwError(err.getCaller(2), paramName, 'to be any of' + JSON.stringify(contains));\n  },\n  isAnyOf: (paramName = '<unknown parameter>', param, contains = []) => {\n    if (contains.indexOf(param) > -1) err.throwError(err.getCaller(2), paramName, 'not to be any of' + JSON.stringify(contains));\n  },\n  isNotType: (paramName = '<unknown parameter>', param, type = '') => {\n    if (getType(param) !== type.toLowerCase()) err.throwError(err.getCaller(2), paramName, 'to be type ' + type.toLowerCase());\n  },\n  isAnyTypeOf: (paramName = '<unknown parameter>', param, types = []) => {\n    types.forEach(type => {\n      if (getType(param) === type) err.throwError(err.getCaller(2), paramName, 'not to be type of ' + type.toLowerCase());\n    });\n  },\n  missingKey: (paramName = '<unknown parameter>', param, keyName = '') => {\n    err.isUndefined(paramName, param);\n    if (Object.keys(param).indexOf(keyName) === -1) err.throwError(err.getCaller(2), paramName, 'to contain \\'' + keyName + '\\' key');\n  },\n  missingAnyKeys: (paramName = '<unknown parameter>', param, keyNames = ['']) => {\n    err.isUndefined(paramName, param);\n    const keyList = Object.keys(param);\n    keyNames.forEach(keyName => {\n      if (keyList.indexOf(keyName) === -1) err.throwError(err.getCaller(2), paramName, 'to contain \\'' + keyName + '\\' key');\n    });\n  },\n  containsUndefined: (paramName = '<unknown parameter>', param) => {\n    [undefined, null].forEach(value => {\n      const location = locate(param, value);\n      if (location) err.throwError(err.getCaller(2), paramName, 'not to contain \\'' + JSON.stringify(value) + '\\' at ' + location);\n    });\n  },\n  isInvalidPath: (paramName = '<unknown parameter>', param) => {\n    err.isUndefined(paramName, param);\n    err.isNotType(paramName, param, 'string');\n    err.isAnyOf(paramName, param, ['', '/']);\n    '.$[]#'.split().forEach(invalidChar => {\n      if (param.indexOf(invalidChar) > -1) err.throwError(err.getCaller(2), paramName, 'not to contain invalid character \\'' + invalidChar + '\\'');\n    });\n    if (param.match(/\\/{2,}/g)) err.throwError(err.getCaller(2), paramName, 'not to contain consecutive forward slash characters');\n  },\n  isInvalidWriteData: (paramName = '<unknown parameter>', param) => {\n    err.isUndefined(paramName, param);\n    err.containsUndefined(paramName, param);\n  }\n};\nexport default err;", "// Allows us to pass arrays and numbers instead of just strings to the format function.\nconst stringify = arg => Array.isArray(arg) ? arg.join(\", \") : typeof arg === \"string\" ? arg : \"\" + arg; // Replaces a string with the values of an object. Google \"format unicorn\" on an explanation of how to use.\n\n\nconst format = (str, args) => args ? Object.keys(args).reduce((str, arg) => str.replace(new RegExp(`\\\\{${arg}\\\\}`, 'gi'), stringify(args[arg])), str) : str;\n\nexport { format };", "export default {\n  format: \"{reason} at line {line}\",\n  symbols: {\n    colon: \"colon\",\n    // :\n    comma: \"comma\",\n    // ,  ،  、\n    semicolon: \"semicolon\",\n    // ;\n    slash: \"slash\",\n    // /  relevant for comment syntax support\n    backslash: \"backslash\",\n    // \\  relevant for escaping character\n    brackets: {\n      round: \"round brackets\",\n      // ( )\n      square: \"square brackets\",\n      // [ ]\n      curly: \"curly brackets\",\n      // { }\n      angle: \"angle brackets\" // < >\n\n    },\n    period: \"period\",\n    // . Also known as full point, full stop, or dot\n    quotes: {\n      single: \"single quote\",\n      // '\n      double: \"double quote\",\n      // \"\n      grave: \"grave accent\" // ` used on Javascript ES6 Syntax for String Templates\n\n    },\n    space: \"space\",\n    //       \n    ampersand: \"ampersand\",\n    //\t&\n    asterisk: \"asterisk\",\n    //\t*  relevant for some comment sytanx\n    at: \"at sign\",\n    //\t@  multiple uses in other coding languages including certain data types\n    equals: \"equals sign\",\n    //\t=\n    hash: \"hash\",\n    //\t#\n    percent: \"percent\",\n    //\t%\n    plus: \"plus\",\n    //\t+\n    minus: \"minus\",\n    //\t−\n    dash: \"dash\",\n    //\t−\n    hyphen: \"hyphen\",\n    //\t−\n    tilde: \"tilde\",\n    //\t~\n    underscore: \"underscore\",\n    //\t_\n    bar: \"vertical bar\" //\t|\n\n  },\n  types: {\n    key: \"key\",\n    value: \"value\",\n    number: \"number\",\n    string: \"string\",\n    primitive: \"primitive\",\n    boolean: \"boolean\",\n    character: \"character\",\n    integer: \"integer\",\n    array: \"array\",\n    float: \"float\" //... Reference: https://en.wikipedia.org/wiki/List_of_data_structures\n\n  },\n  invalidToken: {\n    tokenSequence: {\n      prohibited: \"'{firstToken}' token cannot be followed by '{secondToken}' token(s)\",\n      permitted: \"'{firstToken}' token can only be followed by '{secondToken}' token(s)\"\n    },\n    termSequence: {\n      prohibited: \"A {firstTerm} cannot be followed by a {secondTerm}\",\n      permitted: \"A {firstTerm} can only be followed by a {secondTerm}\"\n    },\n    double: \"'{token}' token cannot be followed by another '{token}' token\",\n    useInstead: \"'{badToken}' token is not accepted. Use '{goodToken}' instead\",\n    unexpected: \"Unexpected '{token}' token found\"\n  },\n  brace: {\n    curly: {\n      missingOpen: \"Missing '{' open curly brace\",\n      missingClose: \"Open '{' curly brace is missing closing '}' curly brace\",\n      cannotWrap: \"'{token}' token cannot be wrapped in '{}' curly braces\"\n    },\n    square: {\n      missingOpen: \"Missing '[' open square brace\",\n      missingClose: \"Open '[' square brace is missing closing ']' square brace\",\n      cannotWrap: \"'{token}' token cannot be wrapped in '[]' square braces\"\n    }\n  },\n  string: {\n    missingOpen: \"Missing/invalid opening string '{quote}' token\",\n    missingClose: \"Missing/invalid closing string '{quote}' token\",\n    mustBeWrappedByQuotes: \"Strings must be wrapped by quotes\",\n    nonAlphanumeric: \"Non-alphanumeric token '{token}' is not allowed outside string notation\",\n    unexpectedKey: \"Unexpected key found at string position\"\n  },\n  key: {\n    numberAndLetterMissingQuotes: \"Key beginning with number and containing letters must be wrapped by quotes\",\n    spaceMissingQuotes: \"Key containing space must be wrapped by quotes\",\n    unexpectedString: \"Unexpected string found at key position\"\n  },\n  noTrailingOrLeadingComma: \"Trailing or leading commas in arrays and objects are not permitted\"\n};"],
  "mappings": "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",
  "names": ["maxDepth", "getType", "identity", "keyName", "newKeyName", "startDepth", "collection", "path", "locate", "maxLayer", "identical", "o", "e", "r", "import_mitsuketa", "str", "React", "node", "buffer", "i", "quotes", "err", "_line", "nonAlphaNumeric", "text", "string", "ii"]
}
